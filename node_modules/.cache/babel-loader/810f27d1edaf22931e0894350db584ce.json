{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst baseURI = 'http://localhost:8080';\nexport const apiSLice = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: baseURI\n  }),\n  endpoints: builder => ({\n    getCategories: builder.query({\n      // get to the baseURI/....\n      query: () => '/api/categories'\n    }),\n    // get labels\n    getLabels: builder.query({\n      query: () => '/api/labels'\n    }),\n    // add new transaction\n    addTransaction: builder.mutation({\n      query: initialTransaction => ({\n        url: '/api/transaction',\n        method: 'POST',\n        body: initialTransaction\n      })\n    }),\n    // delete record\n    deleteTransaction: builder.mutation({\n      query: recordId => ({\n        url: '/api/transaction',\n        method: 'DELETE',\n        boyd: recordId\n      })\n    })\n  })\n});\nexport default apiSLice;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseURI","apiSLice","baseQuery","baseUrl","endpoints","builder","getCategories","query","getLabels","addTransaction","mutation","initialTransaction","url","method","body","deleteTransaction","recordId","boyd"],"sources":["/home/linarifux/projects/expense-tracker/client/src/store/apiSlice.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\n\nconst baseURI = 'http://localhost:8080'\n\nexport const apiSLice = createApi({\n    baseQuery: fetchBaseQuery({baseUrl: baseURI}),\n    endpoints: builder => ({\n        getCategories: builder.query({\n            // get to the baseURI/....\n            query: () => '/api/categories'\n        }),\n        // get labels\n        getLabels: builder.query({\n            query: () => '/api/labels'\n        }),\n\n        // add new transaction\n        addTransaction: builder.mutation({\n            query: (initialTransaction) => ({\n                url: '/api/transaction',\n                method: 'POST',\n                body: initialTransaction\n            })\n        }),\n\n        // delete record\n        deleteTransaction: builder.mutation({\n            query: recordId => ({\n                url: '/api/transaction',\n                method: 'DELETE',\n                boyd: recordId\n            })\n        })\n    })\n})\n\n\nexport default apiSLice"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,cAAnB,QAAwC,8BAAxC;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAGH,SAAS,CAAC;EAC9BI,SAAS,EAAEH,cAAc,CAAC;IAACI,OAAO,EAAEH;EAAV,CAAD,CADK;EAE9BI,SAAS,EAAEC,OAAO,KAAK;IACnBC,aAAa,EAAED,OAAO,CAACE,KAAR,CAAc;MACzB;MACAA,KAAK,EAAE,MAAM;IAFY,CAAd,CADI;IAKnB;IACAC,SAAS,EAAEH,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAE,MAAM;IADQ,CAAd,CANQ;IAUnB;IACAE,cAAc,EAAEJ,OAAO,CAACK,QAAR,CAAiB;MAC7BH,KAAK,EAAGI,kBAAD,KAAyB;QAC5BC,GAAG,EAAE,kBADuB;QAE5BC,MAAM,EAAE,MAFoB;QAG5BC,IAAI,EAAEH;MAHsB,CAAzB;IADsB,CAAjB,CAXG;IAmBnB;IACAI,iBAAiB,EAAEV,OAAO,CAACK,QAAR,CAAiB;MAChCH,KAAK,EAAES,QAAQ,KAAK;QAChBJ,GAAG,EAAE,kBADW;QAEhBC,MAAM,EAAE,QAFQ;QAGhBI,IAAI,EAAED;MAHU,CAAL;IADiB,CAAjB;EApBA,CAAL;AAFY,CAAD,CAA1B;AAiCP,eAAef,QAAf"},"metadata":{},"sourceType":"module"}